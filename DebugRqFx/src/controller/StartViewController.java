package controller;

import java.io.IOException;

import controller.events.StartEvents;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
//import javafx.scene.control.Alert;
//import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.TextField;
import main.Main;
import model.Game;
import model.Profile;
import model.entity.Sprite;

/**
 * 
 * @author Maurice Velgis
 * @author Tyler Clarkson
 * @author Brandon Black
 * 
 *         This class controls what happens when the start button on the start
 *         screen is pressed. If the user does not enter a name, an Alert dialog
 *         will pop-up prompting the user to enter their name.
 *
 */
public class StartViewController implements EventHandler<ActionEvent> {

	///////////////////////////////////////////////////////////////////////////
	// FIELDS
	///////////////////////////////////////////////////////////////////////////
	private StartEvents se;

	public static Profile currentUser;// = defaultUser;
	
	/**
	 * Textfield containing the user's name
	 */
	@FXML
	private TextField name;
	
	@FXML
	private Label err_msg;

	/**
	 * UserName textField - Textfield for user to enter username upon sign in
	 */
	@FXML
	private TextField signInUs;

	/**
	 * Password textfield - user enters password and it will be checked against the
	 * corresponding username in profiles.txt
	 */
	@FXML
	private PasswordField signInPw = new PasswordField();

	/**
	 * Static variable for user's name; ensures it is accessible from
	 * LocalViewController class
	 */
	private static String stringName;

	@FXML
	public void initialize() {
		
		se = new StartEvents(signInUs, signInPw);
	}

	///////////////////////////////////////////////////////////////////////////
	// HANDLE
	///////////////////////////////////////////////////////////////////////////
	/**
	 * Handles ActionEvents generated by the StartView
	 * 
	 * @param event
	 *            ActionEvent
	 */
	@Override
	public void handle(ActionEvent event) {
		String eventSource = event.getSource().toString();
		System.out.println(eventSource);
		if (eventSource.contains("Sign In")) {
			if(!StartEvents.found)
				err_msg.setVisible(true);
			
			se.SignIn();
		} else if (eventSource.contains("Create New Profile")) {
			se.CreateProfile();
		}
	}
	
	public void signInGuest() {
		se.Guest();
	}


	/**
	 * Static method to return name typed in by user
	 * 
	 * @return
	 */
	public static String getName() {
		return stringName;
	}
}
